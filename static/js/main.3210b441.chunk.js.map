{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","fetchMovieByTitle","fetch","then","response","json","result","Title","Plot","Poster","imdbID","catch","error","FindMovie","addMovie","isExist","useState","setTitle","setMovie","setError","fetchMovie","a","movieFromServer","htmlFor","type","id","value","placeholder","classNames","onChange","event","target","trim","onClick","App","state","data","isMovieExists","newMovie","find","setState","setTimeout","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3210b441.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=c3b4b8eb';\n\nexport function fetchMovieByTitle(title) {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => response.json())\n    .then(result => ({\n      title: result.Title,\n      description: result.Plot,\n      imgUrl: result.Poster,\n      imdbId: result.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n    }))\n    .catch((error) => {\n      throw error;\n    });\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { PropTypes } from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { fetchMovieByTitle } from '../../api/movies';\n\nexport const FindMovie = ({ addMovie, isExist }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n\n    setTitle(value.trim());\n  };\n\n  const handleClick = () => {\n    movie.title && addMovie(movie);\n    setTitle('');\n    setMovie({});\n  };\n\n  const fetchMovie = async() => {\n    const movieFromServer = await fetchMovieByTitle(title);\n\n    if (!movieFromServer.title) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n\n    setMovie(movieFromServer);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={(classNames('input', { 'is-danger': error }))}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={fetchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleClick}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n        <div className=\"field is-grouped\">\n          {isExist && 'This movie is already in the movie-list'}\n        </div>\n      </form>\n\n      {\n        movie.title && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </div>\n        )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  isExist: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n    isMovieExists: false,\n  };\n\n  addMovie = (newMovie) => {\n    const isMovieExists = !!this.state.movies\n      .find(movie => movie.title === newMovie.title);\n\n    if (!isMovieExists) {\n      this.setState(state => ({\n        movies: [...state.movies, newMovie],\n      }));\n    } else {\n      this.setState(state => ({\n        movies: state.movies,\n        isMovieExists: true,\n      }));\n\n      setTimeout(() => {\n        this.setState(state => ({\n          movies: state.movies,\n          isMovieExists: false,\n        }));\n      }, 3000);\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={this.addMovie}\n            isExist={this.state.isMovieExists}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}